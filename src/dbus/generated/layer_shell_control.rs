// This code was autogenerated with `dbus-codegen-rust --crossroads -o src/dbus/generated/layer_shell_control.rs`, see https://github.com/diwic/dbus-rs
use dbus as dbus;
#[allow(unused_imports)]
use dbus::arg;
use dbus_crossroads as crossroads;

pub trait OrgMeLayerShellControl {
    fn toggle_launcher(&mut self) -> Result<(), dbus::MethodErr>;
    fn toggle_session_screen(&mut self) -> Result<(), dbus::MethodErr>;
    fn reload_styles(&mut self) -> Result<(), dbus::MethodErr>;
    fn exit(&mut self) -> Result<(), dbus::MethodErr>;
}

pub fn register_org_me_layer_shell_control<T>(cr: &mut crossroads::Crossroads) -> crossroads::IfaceToken<T>
where T: OrgMeLayerShellControl + Send + 'static
{
    cr.register("org.me.LayerShellControl", |b| {
        b.method("ToggleLauncher", (), (), |_, t: &mut T, ()| {
            t.toggle_launcher()
        });
        b.method("ToggleSessionScreen", (), (), |_, t: &mut T, ()| {
            t.toggle_session_screen()
        });
        b.method("ReloadStyles", (), (), |_, t: &mut T, ()| {
            t.reload_styles()
        });
        b.method("Exit", (), (), |_, t: &mut T, ()| {
            t.exit()
        });
    })
}
